# coding: utf-8
get_ipython().magic('pylab')
plt.style.use('ggplot')
from libs import utils
import tensorflow as tf
sess = tf.InteractiveSession()
mean = 0
sigma = 1.0
z = (tf.exp(tf.neg(tf.pow(x - mean, 2.0) / (2.0 * tf.pow(sigma, 2.0)))) * (1.0 / (sigma * tf.sqrt(2.0 * 3.1415))))
x = tf.linspace(-10.0,10.0,100)
x.eval()
z = (tf.exp(tf.neg(tf.pow(x - mean, 2.0) / (2.0 * tf.pow(sigma, 2.0)))) * (1.0 / (sigma * tf.sqrt(2.0 * 3.1415))))
res = z.eval()
print(res)
plt.plot(res)
ksize = z.get_shape().as_list()[0]
z_2d = tf.matmul(tf.reshape(z, [ksize, 1]), tf.reshape(z, [1, ksize]))
plt.imshow(z_2d.eval)
plt.imshow(z_2d.eval())
from skimage import data
img = data.camera().astype(np.float32)
plt.imshow(img)
plt.imshow(img, cmap='gray')
print(img.shape)
img_4d = img.reshape([1,img.shape[0],img.shape[1], 1])
print(img_4d.shape)
img_4d = tf.reshape(img, [1,img.shape[0],img.shape[1], 1])
img_4d.get_shape()
z_4d = tf.reshape(z_2d, [ksize,ksize,1,1])
print(z_4d.get_shape().as_list())
convolved = tf.nn.conv2d(img_4d, z_4d, strides=[1,1,1,1], padding='SAME')
res = convolved.eval()
print(res.shape)
plt.imshow(np.squeeze(res), cmap='gray')
plt.imshow(res[0, :, :,0 ])
xs = tf.linspace(-10,10,ksize)
xs = tf.linspace(-10.0,10.0,ksize)
ys = tf.sin(xs)
plt.plot(ys.eval())
plt.figure()
plt.plot(ys.eval())
ys = tf.reshape(ys, [ksize,1])
ones = tf.ones((1,ksize))
wave = tf.matmul(ys,ones)
plt.imshow(wave.eval(), cmap='gray')
gabor = tf.mul(wave,z_2d)
plt.imshow(gabor.eval(), cmap='gray')
plt.figure()
print(gabor.shape)
print(gabor.shape())
get_ipython().magic('save tensorflow_session1 1-50')
